{"pages":[{"url":"http://0x8badfood.github.io/blog/how-to-stream-webcam-video-on-webpage.html","text":"We will use Ubutu 14.04 in virtual box and MacOS as host. Initial setup for guise OS (Ubuntu 14.04) To have guvcview working we need stable version () Details could be found here Add ppa: sudo apt-add-repository \"deb http://ppa.launchpad.net/pj-assis/ppa/ubuntu trusty main\" sudo apt-get update Install guvcview and moitoin: sudo apt-get install guvcview sudo apt-get install motion Add config for motion (Details here and here ): mkdir ~/.motion vim ~/.motion/motion.conf Add following to motion.conf: webcam_port 8081 webcam_localhost off Initial setup for host OS (MacOS) To have access to you camera in guies OS you need to enable it in VritualBox From VBox command line: VBoxManage list vms VBoxManage list webcams Video Input Devices: 2 .1 \"Logitech Camera\" 0x12200000046d081b .2 \"FaceTime HD Camera\" CC24553911QF6VVD1 VBoxManage controlvm \"ubunut-dev\" webcam attach /dev/video0 From VBox GUI: VirtualBox Documentation When finish check that webcam device is available in guest OS(Ubutu): ls -la /dev/video* crw-rw----+ 1 root video 81, 0 Jul 25 20:34 /dev/video0 Now we are ready to test. From terminal on Ubutnu run command: guvcview Check that camera is working Testing streaming on web page. Run form terminal: motion And open url: http://localhost:8081/ You should see your video on page: Sources: PPA for guvcview VirtualBox Documentation","tags":"HowTo","title":"How to stream webcam video on webpage"},{"url":"http://0x8badfood.github.io/blog/some-git-tips-to-make-your-life-easy.html","text":"Update last commit git commit --amend Revert last commit $ git commit -m \"Something terribly misguided\" ( 1 ) $ git reset --soft HEAD~ ( 2 ) << edit file s as necessary >> ( 3 ) $ git add ... ( 4 ) $ git commit -c ORIG_HEAD ( 5 ) Source: Stackoverflow Update author & email in your previous commits Update author for all your commits: git filter-branch -f --env-filter \"GIT_AUTHOR_NAME='Mobile Developer'; GIT_AUTHOR_EMAIL='your_mail@gmail.com'; GIT_COMMITTER_NAME='Mobile Developer'; GIT_COMMITTER_EMAIL='app.mobile.developer@gmail.com';\" HEAD Source: Stackoverflow Commit in the past (with date) git commit --date=\"`date --date='2 day ago'`\" -am \"update\" git commit --date=\"Wed Feb 16 14:00 2037 +0100\" Check author and commiter dates: git log --date-order --date=iso --pretty=format:'Author Date[%ad] Committer Date [%cd]‘ Option Variable Name Description author date GIT_AUTHOR_DATE notes when this commit was originally made commit date GIT_COMMITTER_DATE gets changed every time the commit is being modified In git log you see author date: commit b9195931207eaaf8763c585595e6347542e9261d Author: Mobile Developer <app.mobile.developer@gmail.com> Date: Wed Nov 11 17:34:35 2015 -0800 &#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94;&#94; Author Date To check author and committer dates use following command: git log --date-order --date=iso --pretty=format:'Author Date[%ad] Committer Date [%cd]‘ GIT_AUTHOR_DATE=$(date -v-5d) GIT_COMMITTER_DATE=$(date -v-5d) git commit -m \"Added Additionals headers\" Summary Option Description Update last commit git commit --amend Commit in past git commit --date=\" date --date='2 day ago' \" -am \"update\" Revert last commit git reset --soft HEAD~ Sources: Stackoverflow Git documentation","tags":"HowTo","title":"Some git tips to make your life easy"},{"url":"http://0x8badfood.github.io/blog/how-to-contribute-to-aosp-android-open-source-project.html","text":"Prepare Install tools (Gerrit, Repo) Gerrit Setup your account on Settings Page in Gerrit account Setup your HTTP Password on Settings Page Setup your Agreement (Google CLA) on Settings Page Repo All required information could be found in official documentation Repo installing mkdir ~/bin PATH=~/bin: $ PATH $ curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo chmod a+x ~/bin/repo Syncing code and changes Here we suppose that change will be in project platform/frameworks/support Repo syncing (only for one project as example) repo sync platform/frameworks/support Do your changes and commit them locally Pushing your change to remote server Check your remotes: ➜ support git:(master) git remote -v aosp https://android.googlesource.com/platform/frameworks/support (fetch) aosp https://android.googlesource.com/platform/frameworks/support (push) Pushing your changes to gerrit: git push aosp HEAD:refs/for/master Pushing new patch set to gerrit: git push aosp HEAD:refs/changes/229627/new Check your results on server Changes: https://android-review.googlesource.com/#/c/229627/ Used resources https://source.android.com/source/contributing.html https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes https://wiki.linaro.org/Platform/Android/Upstreaming https://gerrit-review.googlesource.com/Documentation/intro-user.html https://gerrit-review.googlesource.com/Documentation/user-changeid.html https://source.android.com/source/submit-patches.html https://www.chromium.org/chromium-os/developer-guide/gerrit-guide/legacy https://source.android.com/source/developing.html https://source.android.com/source/using-repo.html https://code.google.com/p/android/issues/ https://code.google.com/p/android/issues/detail?id=209766&can=6&sort=-opened&colspec=ID%20Status%20Priority%20Owner%20Summary%20Stars%20Reporter%20Opened https://source.android.com/source/index.html","tags":"HowTo","title":"How to contribute to AOSP (Android Open Source Project)?"},{"url":"http://0x8badfood.github.io/blog/how-to-access-ubuntu-via-ssh-in-virtual.html","text":"Port forwarding Froward host port 9022 to guest port 22 in VirtualBox settings: SSH connect If you try to connect now you will get following: ssh dev@localhost -p 9022 ssh_exchange_identification: Connection closed by remote host You need to install ssh server on guest machine (Ubuntu): sudo apt-get install openssh-server After that try connect again (type yes): ssh dev@localhost -p 9022 The authenticity of host ‘[localhost]:9022 ([127.0.0.1]:9022)' can't be established. ECDSA key fingerprint is SHA256:hHafM4Aoy9TpHEq4ISdsNVhowOp7nocSfK9ER+BoheI. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added ‘[localhost]:9022' (ECDSA) to the list of known hosts. dev@localhost's password: Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.19.0-56-generic x86_64) * Documentation: https://help.ubuntu.com/ The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. dev@dev-box:~$ Done!","tags":"HowTo","title":"How to access Ubuntu via SSH in Virtual?"},{"url":"http://0x8badfood.github.io/blog/how-to-run-c-app-on-mac-from-command-line.html","text":"Download and install Xamarin Studio: Xamarin Studio Open terminal and check commands: mcs mono ################### mcs - C# compiler mono - Mono runtime Console example Create file: vim monoapp.cs using System; // Importing namespace class Test // Class declaration { static void Main() // Method declaration { //int x = 12 * 30; // Statement 1 Console.WriteLine (\"Hello form mono!\"); // Statement 2 } // End of method } Compile : mcs monoapp.cs And run: mono monoapp.exe Result: Hello from mono! WinForms UI example: using System; using System.Drawing; using System.Windows.Forms; public class HelloWorld : Form { static public void Main () { Application.Run (new HelloWorld ()); } public HelloWorld () { Button b = new Button (); b.Text = \"Click Me!\"; b.Click += new EventHandler (Button_Click); Controls.Add (b); } private void Button_Click (object sender, EventArgs e) { MessageBox.Show (\"Button Clicked!\"); } } Compile and run: mcs -pkg:dotnet win_mono_app.cs And run: mono win_mono_app.exe Links: MonoDevelop Xamarin Samples","tags":"HowTo","title":"How to run C# app on Mac from command line?"},{"url":"http://0x8badfood.github.io/blog/how-to-create-small-container-with-cron.html","text":"Create docker file (Dockerfile): FROM busybox ADD crontab /var/spool/cron/crontabs/www-data CMD crond -f Create cron task in file (crontab): * * * * * echo \"Current container's time:\"$([Mon Oct 12 21:36:41 2015] +\"%Y-%m-%d %H:%M\") Create image: docker build --tag busybox-cron/myrepo . Check that you images: docker ps -a #output: POSITORY TAG IMAGE ID CREATED VIRTUAL SIZE busybox-cron/myrepo latest 1d1ec072182f 40 minutes ago 1.096 MB Run container: docker run -d busybox-cron/myrepo See result output: docker logs -t -f 58ac0e023af4 2015-10-13T04:01:00.203233152Z Current container's time:2015-10-13 04:01 2015-10-13T04:02:00.206203618Z Current container's time:2015-10-13 04:02 2015-10-13T04:03:00.220089213Z Current container's time:2015-10-13 04:03 2015-10-13T04:04:00.219378550Z Current container's time:2015-10-13 04:04 2015-10-13T04:05:00.224196714Z Current container's time:2015-10-13 04:05","tags":"HowTo","title":"How to create small container with cron?"}]}